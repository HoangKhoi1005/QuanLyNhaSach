/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.form;

import SQLServerProvider.SQLServerProvider;
import com.DAO.NhaCungCapDAO;
import com.DAO.SachDAO;
import com.DTO.NhaCungCapDTO;
import com.DTO.SachDTO;
import com.raven.dialog.Message;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class Form_NhaCungCap extends javax.swing.JPanel {
    private Main main;
    private SQLServerProvider conn;
    /**
     * Creates new form Form_NhaCungCap
     */
    public Form_NhaCungCap(Main main) {
        this.main = main;
        initComponents();
        hienThiDS();
        suaThongTinKhiDoubleClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbNhaCC = new com.raven.component.Table();
        btnTraCuu = new com.raven.component.Button();
        txtTraCuu = new com.raven.component.TextField();
        cboSapXep = new combo_suggestion.ComboBoxSuggestion();
        btnXoaNCC = new com.raven.component.Button();
        btnCapNhatNCC = new com.raven.component.Button();
        btnThemNCC = new com.raven.component.Button();
        btnSapXep = new com.raven.component.Button();

        setOpaque(false);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(4, 72, 210));
        jLabel1.setText("Sản Phẩm / Nhà Cung Cấp");

        tbNhaCC.setBackground(new java.awt.Color(236, 234, 234));
        tbNhaCC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Mã nhà cung cấp", "Tên nhà cung cấp", "Địa chỉ nhà cung cấp", "Số điện thoại", "Email", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbNhaCC.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tbNhaCC.setGridColor(new java.awt.Color(204, 204, 204));
        tbNhaCC.setSelectionBackground(new java.awt.Color(102, 102, 255));
        tbNhaCC.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tbNhaCC.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tbNhaCC.setShowGrid(true);
        jScrollPane2.setViewportView(tbNhaCC);
        if (tbNhaCC.getColumnModel().getColumnCount() > 0) {
            tbNhaCC.getColumnModel().getColumn(0).setPreferredWidth(30);
            tbNhaCC.getColumnModel().getColumn(0).setMaxWidth(30);
            tbNhaCC.getColumnModel().getColumn(1).setPreferredWidth(120);
            tbNhaCC.getColumnModel().getColumn(1).setMaxWidth(120);
            tbNhaCC.getColumnModel().getColumn(2).setPreferredWidth(250);
            tbNhaCC.getColumnModel().getColumn(2).setMaxWidth(250);
            tbNhaCC.getColumnModel().getColumn(3).setPreferredWidth(300);
            tbNhaCC.getColumnModel().getColumn(3).setMaxWidth(300);
        }

        btnTraCuu.setBackground(new java.awt.Color(153, 153, 255));
        btnTraCuu.setForeground(new java.awt.Color(255, 255, 255));
        btnTraCuu.setText("Tra Cứu");
        btnTraCuu.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnTraCuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraCuuActionPerformed(evt);
            }
        });

        txtTraCuu.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtTraCuu.setName(""); // NOI18N
        txtTraCuu.setShadowColor(new java.awt.Color(99, 91, 255));

        cboSapXep.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Vui lòng chọn dữ liệu cần sắp xếp--", "Mã nhà cung cấp", "Tên nhà cung cấp", "Địa chỉ", "Số điện thoại", "Trạng thái" }));
        cboSapXep.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        cboSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSapXepActionPerformed(evt);
            }
        });

        btnXoaNCC.setBackground(new java.awt.Color(244, 67, 54));
        btnXoaNCC.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaNCC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/minus.png"))); // NOI18N
        btnXoaNCC.setText("Xóa nhà cung cấp");
        btnXoaNCC.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoaNCC.setIconTextGap(10);
        btnXoaNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaNCCActionPerformed(evt);
            }
        });

        btnCapNhatNCC.setBackground(new java.awt.Color(0, 140, 186));
        btnCapNhatNCC.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhatNCC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/edit_1.png"))); // NOI18N
        btnCapNhatNCC.setText("Cập nhật thông tin");
        btnCapNhatNCC.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCapNhatNCC.setIconTextGap(10);
        btnCapNhatNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatNCCActionPerformed(evt);
            }
        });

        btnThemNCC.setBackground(new java.awt.Color(76, 175, 80));
        btnThemNCC.setForeground(new java.awt.Color(255, 255, 255));
        btnThemNCC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/addWhite.png"))); // NOI18N
        btnThemNCC.setText("Thêm nhà cung cấp");
        btnThemNCC.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemNCC.setIconTextGap(10);
        btnThemNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNCCActionPerformed(evt);
            }
        });

        btnSapXep.setBackground(new java.awt.Color(153, 153, 255));
        btnSapXep.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXep.setText("Sắp xếp theo:");
        btnSapXep.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThemNCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCapNhatNCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 398, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCapNhatNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTraCuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraCuuActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbNhaCC.getModel();
        model.setRowCount(0);
        hienThiDSTimKiem(txtTraCuu.getText());
    }//GEN-LAST:event_btnTraCuuActionPerformed

    private void cboSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSapXepActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbNhaCC.getModel();
        model.setRowCount(0);
        if("Mã nhà cung cấp".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("MANCC");
        else if("Tên nhà cung cấp".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("TENNCC");
        else if("Địa chỉ".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("DIACHINCC");
        else if("Số điện thoại".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("SODT");
        else if("Email".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("EMAILNCC");
        else if("Trạng thái".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("TRANGTHAI");
        else if(cboSapXep.getSelectedIndex()==0)
            hienThiDS();
    }//GEN-LAST:event_cboSapXepActionPerformed

    private void btnXoaNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaNCCActionPerformed
        int selectedRow  = tbNhaCC.getSelectedRow();
        if(selectedRow != -1)
        {
            DefaultTableModel model = (DefaultTableModel) tbNhaCC.getModel();
            String maNCC = model.getValueAt(selectedRow, 1).toString();
            String tenNCC = model.getValueAt(selectedRow, 2).toString();
            String diaChiNCC = model.getValueAt(selectedRow, 3).toString();
            String soDT = model.getValueAt(selectedRow, 4).toString();
            String emailNCC = model.getValueAt(selectedRow, 5).toString();
            String trangThai = model.getValueAt(selectedRow, 6).toString();
            

            Form_HuyNhaCC frm = new Form_HuyNhaCC(this,maNCC,tenNCC,diaChiNCC,soDT,emailNCC,trangThai);

            JDialog dialog = new JDialog((JFrame)null, "Hủy nhà cung cấp", true);
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            dialog.getContentPane().add(frm);
            dialog.pack();
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
        }
        else
        {
            boolean kq = showMessage("Vui lòng chọn dữ liệu muốn xóa");
        }
    }//GEN-LAST:event_btnXoaNCCActionPerformed

    private void btnCapNhatNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatNCCActionPerformed
        int selectedRow  = tbNhaCC.getSelectedRow();
        if(selectedRow != -1)
        {
            DefaultTableModel model = (DefaultTableModel) tbNhaCC.getModel();
            String maNCC = model.getValueAt(selectedRow, 1).toString();
            String tenNCC = model.getValueAt(selectedRow, 2).toString();
            String diaChiNCC = model.getValueAt(selectedRow, 3).toString();
            String soDT = model.getValueAt(selectedRow, 4).toString();
            String emailNCC = model.getValueAt(selectedRow, 5).toString();
            String trangThai = model.getValueAt(selectedRow, 6).toString();

            Form_SuaNCC frm = new Form_SuaNCC(this,main,maNCC,tenNCC,diaChiNCC,soDT,emailNCC,trangThai);

            JDialog dialog = new JDialog((JFrame)null, "Sửa sách", true);
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            dialog.getContentPane().add(frm);
            dialog.pack();
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
        }
        else
        {
            boolean kq = showMessage("Vui lòng chọn dữ liệu muốn cập nhật");
        }
    }//GEN-LAST:event_btnCapNhatNCCActionPerformed

    private void btnThemNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNCCActionPerformed
        Form_ThemNCC frm = new Form_ThemNCC(this,main);

        JDialog dialog = new JDialog((JFrame)null, "Thêm nhà cung cấp", true);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.getContentPane().add(frm);
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnThemNCCActionPerformed
    
    public void hienThiDS() {
            ArrayList<NhaCungCapDTO> ds = NhaCungCapDAO.layDS();
            DefaultTableModel model = (DefaultTableModel) this.tbNhaCC.getModel(); // Sử dụng this.tbSach
            for (NhaCungCapDTO ncc : ds) {
                if(ncc.getIsDelete()== 1)
                {
                    Object[] rowData = {false,ncc.getMaNCC(),ncc.getTenNCC(),ncc.getDiaChiNCC(),ncc.getSoDT(),ncc.getEmailNCC(),ncc.getTrangThai()};
                    model.addRow(rowData);
                }
            }
        }
    
    public void hienThiDSTimKiem(String traCuu) {
        ArrayList<NhaCungCapDTO> ds = NhaCungCapDAO.timKiem(traCuu);
        DefaultTableModel model = (DefaultTableModel) this.tbNhaCC.getModel();
        for (NhaCungCapDTO ncc : ds) {
            if(ncc.getIsDelete()== 1)
            {
                Object[] rowData = {false,ncc.getMaNCC(),ncc.getTenNCC(),ncc.getDiaChiNCC(),ncc.getSoDT(),ncc.getEmailNCC(),ncc.getTrangThai()};
                model.addRow(rowData);
            }
        }
    }
    
    public void hienThiDSSapXep(String dulieu) {
        ArrayList<NhaCungCapDTO> ds = NhaCungCapDAO.sapXep(dulieu);
        DefaultTableModel model = (DefaultTableModel) this.tbNhaCC.getModel();
        for (NhaCungCapDTO ncc : ds) {
            if(ncc.getIsDelete()== 1)
            {
                Object[] rowData = {false,ncc.getMaNCC(),ncc.getTenNCC(),ncc.getDiaChiNCC(),ncc.getSoDT(),ncc.getEmailNCC(),ncc.getTrangThai()};
                model.addRow(rowData);
            }
        }
    }
    
    public void updateTableData(ArrayList<NhaCungCapDTO> ds) {
        DefaultTableModel model = (DefaultTableModel) tbNhaCC.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ trước khi cập nhật mới
        for (NhaCungCapDTO ncc : ds) {
            if(ncc.getIsDelete()== 1)
            {
                Object[] rowData = {false,ncc.getMaNCC(),ncc.getTenNCC(),ncc.getDiaChiNCC(),ncc.getSoDT(),ncc.getEmailNCC(),ncc.getTrangThai()};
                model.addRow(rowData);
            }
        }
    }
    public void loadDataToTable() {
        DefaultTableModel model = (DefaultTableModel) tbNhaCC.getModel();
        model.setRowCount(0);
        hienThiDS();
    }
    

    public int khoaChinhTuDong()
    {
        int count = 0;
        try {
            String sql = "SELECT COUNT(*) as count FROM SACH";
            
            ResultSet rs = conn.executeQuery(sql);
            while(rs.next())
                count = rs.getInt("count");
        } catch (Exception e) {
        }
        return count;
    }

    public int getSelectedRowIndex() {
        return tbNhaCC.getSelectedRow();
    }
    
    private boolean showMessage(String message) {
        Message obj = new Message(Main.getFrames()[0], true);
        obj.showMessage(message);
        return obj.isOk();
    }
    
    private void suaThongTinKhiDoubleClick() {
        tbNhaCC.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int selectedRow  = tbNhaCC.getSelectedRow();
                    if(selectedRow != -1)
                    {
                        DefaultTableModel model = (DefaultTableModel) tbNhaCC.getModel();
                        String maNCC = model.getValueAt(selectedRow, 1).toString();
                        String tenNCC = model.getValueAt(selectedRow, 2).toString();
                        String diaChiNCC = model.getValueAt(selectedRow, 3).toString();
                        String soDT = model.getValueAt(selectedRow, 4).toString();
                        String emailNCC = model.getValueAt(selectedRow, 5).toString();
                        String trangThai = model.getValueAt(selectedRow, 6).toString();

                        Form_SuaNCC frm = new Form_SuaNCC(Form_NhaCungCap.this,main,maNCC,tenNCC,diaChiNCC,soDT,emailNCC,trangThai);

                        JDialog dialog = new JDialog((JFrame)null, "Sửa sách", true);
                        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
                        dialog.getContentPane().add(frm);
                        dialog.pack();
                        dialog.setLocationRelativeTo(null);
                        dialog.setVisible(true);
                    }
                    else
                    {
                        boolean kq = showMessage("Vui lòng chọn dữ liệu muốn cập nhật");
                    }
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.component.Button btnCapNhatNCC;
    private com.raven.component.Button btnSapXep;
    private com.raven.component.Button btnThemNCC;
    private com.raven.component.Button btnTraCuu;
    private com.raven.component.Button btnXoaNCC;
    private combo_suggestion.ComboBoxSuggestion cboSapXep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.raven.component.Table tbNhaCC;
    private com.raven.component.TextField txtTraCuu;
    // End of variables declaration//GEN-END:variables
}
