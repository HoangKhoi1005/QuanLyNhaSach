/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.form;

import SQLServerProvider.SQLServerProvider;
import com.DAO.PhieuNhapDAO;
import com.DTO.PhieuNhapDTO;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;
/**
 *
 * @author ACER
 */
public class Form_PhieuNhap extends javax.swing.JPanel {
    private Main main;
    SQLServerProvider conn = new SQLServerProvider();
    /**
     * Creates new form Form_PhieuNhap
     */
    public Form_PhieuNhap(Main main) {
        this.main = main ;
        initComponents();
        hienThiDS();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTraCuu = new com.raven.component.Button();
        txtTraCuu = new com.raven.component.TextField();
        cboSapXep = new combo_suggestion.ComboBoxSuggestion();
        btnXuatPhieuNhap = new com.raven.component.Button();
        btnSuaPhieuNhap = new com.raven.component.Button();
        btnThemPhieuNhap = new com.raven.component.Button();
        btnSapXep = new com.raven.component.Button();
        jLabel1 = new javax.swing.JLabel();
        panelShadow1 = new com.raven.swing.PanelShadow();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhieuNhap = new com.raven.component.Table();
        jLabel2 = new javax.swing.JLabel();

        setOpaque(false);

        btnTraCuu.setBackground(new java.awt.Color(153, 153, 255));
        btnTraCuu.setForeground(new java.awt.Color(255, 255, 255));
        btnTraCuu.setText("Tra Cứu");
        btnTraCuu.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnTraCuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraCuuActionPerformed(evt);
            }
        });

        txtTraCuu.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtTraCuu.setName(""); // NOI18N
        txtTraCuu.setShadowColor(new java.awt.Color(99, 91, 255));

        cboSapXep.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Vui lòng chọn dữ liệu cần sắp xếp--", "Mã phiếu nhập", "Nhân viên nhập", "Nhà cung cấp", "Ngày nhập", "Thành tiền" }));
        cboSapXep.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        cboSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSapXepActionPerformed(evt);
            }
        });

        btnXuatPhieuNhap.setBackground(new java.awt.Color(153, 153, 153));
        btnXuatPhieuNhap.setForeground(new java.awt.Color(255, 255, 255));
        btnXuatPhieuNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/Bill.png"))); // NOI18N
        btnXuatPhieuNhap.setText("Xuất phiếu nhập");
        btnXuatPhieuNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXuatPhieuNhap.setIconTextGap(10);
        btnXuatPhieuNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatPhieuNhapActionPerformed(evt);
            }
        });

        btnSuaPhieuNhap.setBackground(new java.awt.Color(0, 140, 186));
        btnSuaPhieuNhap.setForeground(new java.awt.Color(255, 255, 255));
        btnSuaPhieuNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/edit_1.png"))); // NOI18N
        btnSuaPhieuNhap.setText("Sửa đơn");
        btnSuaPhieuNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSuaPhieuNhap.setIconTextGap(10);
        btnSuaPhieuNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaPhieuNhapActionPerformed(evt);
            }
        });

        btnThemPhieuNhap.setBackground(new java.awt.Color(76, 175, 80));
        btnThemPhieuNhap.setForeground(new java.awt.Color(255, 255, 255));
        btnThemPhieuNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/addWhite.png"))); // NOI18N
        btnThemPhieuNhap.setText("Tạo đơn nhập hàng");
        btnThemPhieuNhap.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemPhieuNhap.setIconTextGap(10);
        btnThemPhieuNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPhieuNhapActionPerformed(evt);
            }
        });

        btnSapXep.setBackground(new java.awt.Color(153, 153, 255));
        btnSapXep.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXep.setText("Sắp xếp theo:");
        btnSapXep.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(4, 72, 210));
        jLabel1.setText("Quản Lý Nhập Kho / Quản lý phiếu nhập");

        tblPhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu nhập", "Ngày nhập", "Nhân viên nhập", "Nhà cung cấp", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPhieuNhap);
        if (tblPhieuNhap.getColumnModel().getColumnCount() > 0) {
            tblPhieuNhap.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblPhieuNhap.getColumnModel().getColumn(0).setMaxWidth(150);
            tblPhieuNhap.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblPhieuNhap.getColumnModel().getColumn(1).setMaxWidth(150);
            tblPhieuNhap.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblPhieuNhap.getColumnModel().getColumn(2).setMaxWidth(150);
            tblPhieuNhap.getColumnModel().getColumn(4).setPreferredWidth(100);
            tblPhieuNhap.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(140, 110, 207));
        jLabel2.setText("Danh sách đơn nhập hàng");
        jLabel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        javax.swing.GroupLayout panelShadow1Layout = new javax.swing.GroupLayout(panelShadow1);
        panelShadow1.setLayout(panelShadow1Layout);
        panelShadow1Layout.setHorizontalGroup(
            panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShadow1Layout.createSequentialGroup()
                .addGroup(panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(panelShadow1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        panelShadow1Layout.setVerticalGroup(
            panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShadow1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelShadow1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnThemPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSuaPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnXuatPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelShadow1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXuatPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSuaPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTraCuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraCuuActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblPhieuNhap.getModel();
        model.setRowCount(0);
        hienThiDSTimKiem(txtTraCuu.getText());
    }//GEN-LAST:event_btnTraCuuActionPerformed

    private void cboSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSapXepActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblPhieuNhap.getModel();
        model.setRowCount(0);
        if("Mã phiếu nhập".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("MAPHIEUNHAP");
        else if("Nhân viên nhập".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("HOTENNV");
        else if("Nhà cung cấp".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("TENNCC");
        else if("Ngày nhập".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("NGAYNHAP");
        else if("Thành tiền".equals(cboSapXep.getSelectedItem().toString()))
        hienThiDSSapXep("THANHTIEN");
        else if(cboSapXep.getSelectedIndex()==0)
        hienThiDS();
    }//GEN-LAST:event_cboSapXepActionPerformed

    private void btnXuatPhieuNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatPhieuNhapActionPerformed
        int selectedRow = tblPhieuNhap.getSelectedRow();
        if (selectedRow != -1) {
            String maPhieuNhap = tblPhieuNhap.getValueAt(selectedRow, 0).toString();
            try {
                // Tạo kết nối và PreparedStatement
                JasperReport rpt = JasperCompileManager.compileReport(getClass().getResourceAsStream("/Report/rptPhieuNhap.jrxml"));

                // Khởi tạo đối tượng SQLServerProvider
                SQLServerProvider conn = SQLServerProvider.getInstance();
                conn.open();

                Connection connection = conn.getConn();

                Map<String, Object> parameters = new HashMap<>();
                parameters.put("maPhieuNhap", maPhieuNhap);
                parameters.put("tenNhaSach", "Nhà sách nhóm 6");
                parameters.put("diaChi", "Địa chỉ: 140 Lê Trọng Tấn");
                parameters.put("soDienThoai", "Liên hệ: 0999999999");
                parameters.put("phieuNhapKho", "PHIẾU NHẬP KHO");
                parameters.put("soHDN", "Số HĐN:");
                parameters.put("ngayNhap", "Ngày nhập:");
                parameters.put("tenNhanVienNhap", "Tên nhân viên nhập:");
                parameters.put("tenNhaCungCap", "Tên nhà cung cấp:");
                parameters.put("tongCong", "Tổng cộng:");
                parameters.put("nguoiNhap", "Người nhập:");
                parameters.put("maPhieuNhap", maPhieuNhap);
                JasperPrint p = JasperFillManager.fillReport(rpt, parameters, connection);

                JasperViewer.viewReport(p, false);

            } catch (Exception  ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnXuatPhieuNhapActionPerformed

    private void btnSuaPhieuNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaPhieuNhapActionPerformed
//        int selectedRow  = tbSach.getSelectedRow();
//        if(selectedRow != -1)
//        {
//            DefaultTableModel model = (DefaultTableModel) tbSach.getModel();
//            String maSach = model.getValueAt(selectedRow, 0).toString();
//            String tenSach = model.getValueAt(selectedRow, 1).toString();
//            String tenTL = model.getValueAt(selectedRow, 2).toString();
//            String tenTG = model.getValueAt(selectedRow, 3).toString();
//            String ngayXB = model.getValueAt(selectedRow, 4).toString();
//            String tenNXB = model.getValueAt(selectedRow, 5).toString();
//            String giaBan = model.getValueAt(selectedRow, 6).toString();
//            String soLuongTon = model.getValueAt(selectedRow, 7).toString();
//
//            Form_SuaSach frm = new Form_SuaSach(this,maSach,tenSach,tenTL,tenTG,ngayXB,tenNXB,giaBan,soLuongTon);
//
//            JDialog dialog = new JDialog((JFrame)null, "Sửa sách", true);
//            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
//            dialog.getContentPane().add(frm);
//            dialog.pack();
//            dialog.setLocationRelativeTo(null);
//            dialog.setVisible(true);
//        }
//        else
//        {
//            boolean kq = showMessage("Vui lòng chọn dữ liệu muốn cập nhật");
//        }
    }//GEN-LAST:event_btnSuaPhieuNhapActionPerformed

    private void btnThemPhieuNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPhieuNhapActionPerformed
        Form_ThemPhieuNhap frm = new Form_ThemPhieuNhap(this,main);

        JDialog dialog = new JDialog((JFrame)null, "Thêm phiếu nhập", true);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.getContentPane().add(frm);
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnThemPhieuNhapActionPerformed
    DecimalFormat decimalFormat = new DecimalFormat("#,##0 VND");
    public void hienThiDS() {
        ArrayList<PhieuNhapDTO> ds = PhieuNhapDAO.layDS();
        DefaultTableModel model = (DefaultTableModel) this.tblPhieuNhap.getModel();
        for (PhieuNhapDTO pn : ds) {
            String thanhTienFormatted = decimalFormat.format(pn.getThanhTien());
            Object[] rowData = {pn.getMaPhieuNhap(),pn.getNgayNhap(),pn.getMaNV(),pn.getMaNCC(),thanhTienFormatted};
            model.addRow(rowData);
        }
    }
    
    public void hienThiDSTimKiem(String traCuu) {
        ArrayList<PhieuNhapDTO> ds = PhieuNhapDAO.timKiem(traCuu);
        DefaultTableModel model = (DefaultTableModel) this.tblPhieuNhap.getModel();
        for (PhieuNhapDTO pn : ds) {
            String thanhTienFormatted = decimalFormat.format(pn.getThanhTien());
            Object[] rowData = {pn.getMaPhieuNhap(),pn.getNgayNhap(),pn.getMaNV(),pn.getMaNCC(),thanhTienFormatted};
            model.addRow(rowData);
        }
    }

    public void hienThiDSSapXep(String dulieu) {
        ArrayList<PhieuNhapDTO> ds = PhieuNhapDAO.sapXep(dulieu);
        DefaultTableModel model = (DefaultTableModel) this.tblPhieuNhap.getModel();
        for (PhieuNhapDTO pn : ds) {
            String thanhTienFormatted = decimalFormat.format(pn.getThanhTien());
            Object[] rowData = {pn.getMaPhieuNhap(),pn.getNgayNhap(),pn.getMaNV(),pn.getMaNCC(),thanhTienFormatted};
            model.addRow(rowData);
        }
    }
    

    public void updateTableData(ArrayList<PhieuNhapDTO> ds) {
        DefaultTableModel model = (DefaultTableModel) tblPhieuNhap.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ trước khi cập nhật mới
        for (PhieuNhapDTO pn : ds) {
            String thanhTienFormatted = decimalFormat.format(pn.getThanhTien());
            Object[] rowData = {pn.getMaPhieuNhap(), pn.getNgayNhap(), pn.getMaNV(), pn.getMaNCC(), thanhTienFormatted};
            model.addRow(rowData);
        }
    }
    public void loadDataToTable() {
        DefaultTableModel model = (DefaultTableModel) tblPhieuNhap.getModel();
        model.setRowCount(0);
        hienThiDS();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.component.Button btnSapXep;
    private com.raven.component.Button btnSuaPhieuNhap;
    private com.raven.component.Button btnThemPhieuNhap;
    private com.raven.component.Button btnTraCuu;
    private com.raven.component.Button btnXuatPhieuNhap;
    private combo_suggestion.ComboBoxSuggestion cboSapXep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.raven.swing.PanelShadow panelShadow1;
    private com.raven.component.Table tblPhieuNhap;
    private com.raven.component.TextField txtTraCuu;
    // End of variables declaration//GEN-END:variables
}
