/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package com.raven.form;

import SQLServerProvider.SQLServerProvider;
import com.raven.dialog.Message;
import com.raven.main.Form_Login;
import javax.mail.Transport;
import javax.mail.Authenticator;
import java.net.PasswordAuthentication;
import java.util.Properties;
import java.util.Random;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.mail.Session;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author ACER
 */
public class Form_QuenMatKhau extends javax.swing.JPanel {
    SQLServerProvider conn = new SQLServerProvider();
    private static final int doDaiCaptcha = 6; // Độ dài của mã Captcha
    private String maCaptcha = "";
    /** Creates new form Form_QuenMatKhau */
    public Form_QuenMatKhau() {
        initComponents();
        taoMaCaptcha();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtEmail = new com.raven.swing.TextField();
        jLabel2 = new javax.swing.JLabel();
        txtNhapMaCaptCha = new com.raven.swing.TextField();
        txtMaCaptcha = new com.raven.swing.TextField();
        btnTiepTuc = new com.raven.component.Button();
        btnQuayVe = new com.raven.component.Button();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(79, 79, 79));
        jLabel1.setText("Quên Mật Khẩu");

        txtEmail.setLabelText("Email");

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setText("Nhập Email của bạn đã dùng để đăng ký tài khoản");

        txtNhapMaCaptCha.setLabelText("Nhập mã Captcha");

        txtMaCaptcha.setEnabled(false);
        txtMaCaptcha.setLabelText("CaptCha");

        btnTiepTuc.setBackground(new java.awt.Color(25, 182, 247));
        btnTiepTuc.setForeground(new java.awt.Color(255, 255, 255));
        btnTiepTuc.setText("Tiếp Tục");
        btnTiepTuc.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnTiepTuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTiepTucActionPerformed(evt);
            }
        });

        btnQuayVe.setBackground(new java.awt.Color(25, 182, 247));
        btnQuayVe.setForeground(new java.awt.Color(255, 255, 255));
        btnQuayVe.setText("Quay Về Đăng Nhập");
        btnQuayVe.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnQuayVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayVeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnQuayVe, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNhapMaCaptCha, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(txtMaCaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTiepTuc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNhapMaCaptCha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaCaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTiepTuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnQuayVe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
    }// </editor-fold>//GEN-END:initComponents

     private void taoMaCaptcha() {
        maCaptcha = taoMaCaptchaRandom(doDaiCaptcha);
        txtMaCaptcha.setText(maCaptcha);
    }
     
    
    
    private void guiMatKhauEmail(String toEmail, String matKhau, String tenDN) {
        // Gửi mật khẩu qua email
        try {
            String subject = "[Thông Báo Từ Nhà Sách Nhóm 6] Thông tin tài khoản của bạn";
            String body = "Gửi đến nhân viên,\n\n"
            + "Nhà sách nhóm 6 xin gửi đến bạn thông tin về tài khoản của bạn:\n\n"
            + "Tên đăng nhập: " + tenDN + "\n"
            + "Mật khẩu: " + matKhau + "\n\n"
            + "Xin vui lòng giữ thông tin này cẩn thận và không chia sẻ cho bất kỳ ai khác.\n\n"
            + "Trân trọng,\n"
            + "Nhà sách nhóm 6";


            Properties props = new Properties();
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true");

            Session session = Session.getInstance(props, new Authenticator() {
                protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
                    String password = "kuggswcsipgfsdca";
                    return new javax.mail.PasswordAuthentication("vuhuyenvi2003@gmail.com", password);
                }
            });

            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress("vuhuyenvi2003@gmail.com"));
            message.setRecipients(javax.mail.Message.RecipientType.TO, InternetAddress.parse(toEmail));
            message.setSubject(subject);
            message.setText(body);

            Transport.send(message);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi");
        }
    }
    
    private void btnTiepTucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTiepTucActionPerformed
        
        if(txtEmail.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Vui lòng điền thông tin Email");
            return;
        }
        
        if (!txtNhapMaCaptCha.getText().equals(txtMaCaptcha.getText())) {
            JOptionPane.showMessageDialog(this,"Mã đã nhập không đúng");
            taoMaCaptcha();
            txtNhapMaCaptCha.setText("");
            return;
        }
        
        String matKhau = layMatKhau(txtEmail.getText())[0];
        String tenDN = layMatKhau(txtEmail.getText())[1];
        if (matKhau != null && !matKhau.isEmpty()) {
            guiMatKhauEmail(txtEmail.getText(), matKhau, tenDN);
            JOptionPane.showMessageDialog(this,"Mật khẩu đã được gửi về email.");
        } else {
            JOptionPane.showMessageDialog(this,"Người dùng này chưa được đăng ký");
            txtEmail.setText("");
            txtNhapMaCaptCha.setText("");
            taoMaCaptcha();
            return;
        }
    }//GEN-LAST:event_btnTiepTucActionPerformed

    private void btnQuayVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayVeActionPerformed
        SwingUtilities.getWindowAncestor(this).dispose();
        Form_Login frm = new Form_Login();
        
        frm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frm.pack();
        frm.setLocationRelativeTo(null);
        frm.setVisible(true);
    }//GEN-LAST:event_btnQuayVeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.component.Button btnQuayVe;
    private com.raven.component.Button btnTiepTuc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private com.raven.swing.TextField txtEmail;
    private com.raven.swing.TextField txtMaCaptcha;
    private com.raven.swing.TextField txtNhapMaCaptCha;
    // End of variables declaration//GEN-END:variables

    private String taoMaCaptchaRandom(int doDaiCaptcha) {
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        Random random = new Random();
        char[] captcha = new char[doDaiCaptcha];

        for (int i = 0; i < doDaiCaptcha; i++) {
            captcha[i] = characters.charAt(random.nextInt(characters.length()));
        }

        return new String(captcha);
    }

    private String[] layMatKhau(String txtEmail) {
        String sql = "select MATKHAU,TENDN from NHANVIEN, TAIKHOAN where NHANVIEN.MANV=TAIKHOAN.MANV AND EMAILNV = '"+txtEmail+"'";
        conn.open();
        String[] result = new String[2];
        try {
            ResultSet rs = conn.executeQuery(sql);
            if(rs.next()) {
                result[0] = rs.getString("MATKHAU");
                result[1] = rs.getString("TENDN");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return result;
    }
}
